extends layout

block content
  <h3>Crear entrada</h3>

  <form class="form-group" id="f-hora" action="/create" method="post">
  <div class="form-group">
  <div class="form-group">
  <label for="titulo">Título</label>
  <input type="text" name="titulo" value="" required>
  <input type="hidden" name="st" value=#{sessionToken}>
  </div>
  <div class="form-group">
  <label for="fab">Fabricante</label>
  <select class="browser-default" name="fab" id="fab" required>
  <option value="" disabled selected>Seleccione el fabricante</option>
  if fabsd
    each fab, id in fabsd
      option(value=id) #{fab}
  </select>
  <br>
  </div>
  <div class="form-group">
  <label for="tec">Tecnología</label>
  <select class="browser-default" name="tec" id="tec" required>
  <option value="" disabled selected>Seleccione la tecnología</option>
  if tecsd
    each tec, id in tecsd
      option(value=id) #{tec}
  </select>
  <br>
  </div>
  
  <div class="form-group">
  <label for="mod">Modelo</label>
  <input type="text" value="" name="mod">
  </div>
  
  <div class="form-group">
  <label for="ver">Versión</label>
  <input type="text" value="" name="ver">
  </div>
  
  
  <div class="form-group">
  <label for="linkf">Link de la KB del Fabricante</label>
  <input type="text" value="" name="linkf">
  </div>

  <div class="form-group">
  <label for="sint"><strong>Síntoma/Diagnóstico</strong></label>
    <input name="sint" id="sint" type="hidden">
    <div id="editorSint">
    </div>
  </div>

  <br>
  <div class="form-group">
  <label for="caus">Causa</label>
    <input name="caus" id="caus" type="hidden">
    <div id="editorCaus">
    </div>
  </div>
  <br>
  <div class="form-group">
    <label for="solu">Solucion</label>
    <input type="hidden" name="solu" id="solu">
    <div id="editorSolu">
    </div>
  </div>
  <br>
  <div class="file-field input-field">
  <div class="light-blue darken-4 waves-effect waves-light btn">
  <span>Adjunto</span>
  <input type="file" name="files" id="files" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/pdf, image/png, application/msword, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.wordprocessingml.document, text/csv, text/plain, image/jpeg, image/gif" >
  </div>
  <div class="file-path-wrapper">
  <input class="file-path validate" type="text" placeholder="Carga tu adjunto aca" id="txt" >
  <input type="hidden" name="att" id="att" >
  </div>
  <a class="waves-effect waves-teal btn-flat" id="btn-delfile"><i class="material-icons left">delete</i></a>
  </div>

  <button type="submit" class="light-blue darken-4 waves-effect waves-light btn" >Crear registro</button>
  <br>
  <br>
  </div>

  </form>
  

block script
  if msg
      script(type='text/javascript').
        var id = #{id};
        Materialize.toast('#{msg}', 3000, 'rounded',function(){
          if (id)
            window.location= "/register?st=#{sessionToken}&id=#{id}"});
  
  script(src='/javascripts/create.js')
  script(src='/javascripts/tinymce/tinymce.min.js')

  script(type='text/javascript').
    tinymce.init({
      selector: '#editorSint',
      plugins: "textcolor colorpicker",
      init_instance_callback: function (editor) {
        editor.on('Change', function (e) {
          console.log('Editor contents was changed.');
          //console.log(e);
          //console.log(this);
          //console.log(this.getBody());
          $('#sint')[0].value = this.getBody().innerHTML;
        });
      },
      toolbar: "bold, italic, underline, strikethrough, alignleft, aligncenter, alignright, alignjustify, fontsizeselect, bullist, numlist, outdent, indent, blockquote, undo, redo, removeformat, subscript, superscript, forecolor backcolor"
    });
    tinymce.init({
      selector: '#editorCaus',
      plugins: "textcolor colorpicker",
      init_instance_callback: function (editor) {
        editor.on('Change', function (e) {
          console.log('Editor contents was changed.');
          //console.log(e);
          //console.log(this);
          //console.log(this.getBody());
          $('#caus')[0].value = this.getBody().innerHTML;
        });
      },
      toolbar: "bold, italic, underline, strikethrough, alignleft, aligncenter, alignright, alignjustify, fontsizeselect, bullist, numlist, outdent, indent, blockquote, undo, redo, removeformat, subscript, superscript, forecolor backcolor"
    });
    tinymce.init({
      selector: '#editorSolu',
      plugins: "textcolor colorpicker",
      init_instance_callback: function (editor) {
        editor.on('Change', function (e) {
          console.log('Editor contents was changed.');
          //console.log(e);
          //console.log(this);
          //console.log(this.getBody());
          $('#solu')[0].value = this.getBody().innerHTML;
        });
      },
      toolbar: "bold, italic, underline, strikethrough, alignleft, aligncenter, alignright, alignjustify, fontsizeselect, bullist, numlist, outdent, indent, blockquote, undo, redo, removeformat, subscript, superscript, forecolor backcolor"
    });


    
  
